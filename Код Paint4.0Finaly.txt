
import turtle
from turtle import RawTurtle, TurtleScreen
import tkinter.messagebox
from tkinter import colorchooser, filedialog, Menu
import pyautogui


### ### -- –¥–æ–±–∞–≤–∫–∞ Tkinter -- ### ###

DEFAULT_COLOR = (0, 0, 0)
## ## –ü–æ–ª–∑—É–Ω–æ–∫ —Ç–æ–ª—â–∏–Ω—ã –ø–µ—Ä–∞ –Ω–∞—á–∞–ª–æ

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
pen_size = 1
current_color = DEFAULT_COLOR

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ


def change_pen_size(value):
    global pen_size, draw
    try:
        pen_size = int(value)
        if draw:  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —á–µ—Ä–µ–ø–∞—à–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            draw.width(pen_size)  # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—â–∏–Ω—É –ø–µ—Ä–∞
    except ValueError:
        pen_size = 1
        print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞ –∏–∑-–∑–∞ —á–µ–≥–æ —Ç–æ–ª—â–∏–Ω–∞ –ø–µ—Ä–∞ —Å–Ω–æ–≤–∞ —Ä–æ–≤–Ω–∞ 1.")
    #print(f"–¢–æ–ª—â–∏–Ω–∞ –ø–µ—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: {pen_size}") # —É–±—Ä–∞—Ç—å –∏–ª–∏ –∑–∞—Ä–µ—à—ë—Ç–∏—Ç—å

## ## –ü–æ–ª–∑—É–Ω–æ–∫ —Ç–æ–ª—â–∏–Ω—ã –ø–µ—Ä–∞ –∫–æ–Ω–µ—Ü


def pen_washing():
    draw.pencolor('white')
def pen_red():
    draw.pencolor("red")
def pen_black():
    draw.pencolor('black')
def pen_green():
    draw.pencolor('green')
def pen_gray():
    draw.pencolor('gray')
def pen_yellow():
    draw.pencolor('yellow')
def pen_turquoise():
    draw.pencolor('turquoise')
def pen_blue():
    draw.pencolor('blue')
def pen_dark_red():
    draw.pencolor('dark red')
def pen_orange():
    draw.pencolor('orange')
def pen_purple():
    draw.pencolor('purple')
def draw_up():
    draw.penup()
def draw_down():
    draw.pendown()
def choose_color():
  """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç —á–µ—Ä–µ–ø–∞—Ö–∏."""
  color = colorchooser.askcolor(title="–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç")
  if color:  # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ü–≤–µ—Ç
    new_color = color[1]  # color[1] —Å–æ–¥–µ—Ä–∂–∏—Ç —Ü–≤–µ—Ç –≤ —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (#RRGGBB)
    draw.color(new_color)

def choose_fill_color():
  """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞ –∑–∞–ª–∏–≤–∫–∏."""
  color = colorchooser.askcolor(title="–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç –∑–∞–ª–∏–≤–∫–∏")
  if color:
    global fill_color  # –û–±—ä—è–≤–ª—è–µ–º fill_color –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    fill_color = color[1]  # –®–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω—ã–π –∫–æ–¥ —Ü–≤–µ—Ç–∞

def fill_screen():
    """–ó–∞–ø–æ–ª–Ω—è–µ—Ç –≤–µ—Å—å —ç–∫—Ä–∞–Ω —Ç–µ–∫—É—â–∏–º —Ü–≤–µ—Ç–æ–º."""

    pen.fillcolor(fill_color)

    pen.penup()
    pen.goto(-screen.window_width()/2, screen.window_height()/2-50) # –≤–µ—Ä—Ö–Ω–∏–π –ª–µ–≤—ã–π —É–≥–æ–ª
    pen.pendown()
    pen.speed(0) # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å

    pen.begin_fill()
    for _ in range(2):
        pen.forward(screen.window_width())
        pen.right(90)
        pen.forward(screen.window_height())
        pen.right(90)
    pen.end_fill()

def save_screen():
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ö–æ–ª—Å—Ç–∞ Turtle –≤ PNG-—Ñ–∞–π–ª, –∏—Å–ø–æ–ª—å–∑—É—è pyautogui."""
    filename = filedialog.asksaveasfilename(defaultextension=".png",
                                            filetypes=[("PNG files", "*.png"), ("All files", "*.*")],
                                            title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ Turtle (pyautogui)")

    if filename:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–∞–Ω–≤–∞—Å–∞
        x = window.winfo_rootx() + canvas.winfo_x()
        y = window.winfo_rooty() + canvas.winfo_y()
        width = canvas.winfo_width()
        height = canvas.winfo_height()

        try:
            screenshot = pyautogui.screenshot(region=(x, y, width, height))
            screenshot.save(filename)
            print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫ {filename}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è pyautogui: {e}")

width = 1
window = tkinter.Tk()

canvas = tkinter.Canvas(window, width=1920, height=1080, bg="white")
canvas.pack()
window.geometry("800x600")
window.title('Paint')
draw = turtle.RawTurtle(canvas)
pen = turtle.RawTurtle(canvas)
pen.hideturtle()

color_button = tkinter.Button(window, command=choose_color,text='‚ûï',bg='orange', fg='green', width=5,height=2)
color_button.place(x=690+55, y=0)

btnP = tkinter.Button(window,command=pen_purple,bg='purple',fg='white',width=5,height=2)#bg=—Ñ–æ–Ω,fg=–ø–µ—Ä–µ–¥–Ω–∏–π –ø–ª–∞–Ω
btnP.place(x=640+50,y=0)

btnB = tkinter.Button(window,command=pen_blue,bg='blue',fg='white',width=5,height=2)
btnB.place(x=590+45,y=0)

btnTur = tkinter.Button(window,command=pen_turquoise,bg='turquoise',fg='white',width=5,height=2)
btnTur.place(x=540+40,y=0)

btnG = tkinter.Button(window,command=pen_green,bg='green',fg='white',width=5, height=2)
btnG.place(x=490+35,y=0)

btnY = tkinter.Button(window,command=pen_yellow,bg='yellow',fg='white',width=5,height=2)
btnY.place(x=440+30,y=0)

btnO = tkinter.Button(window,command=pen_orange,bg='orange',fg='white',width=5,height=2)
btnO.place(x=390+25,y=0)

btnR = tkinter.Button(window,command=pen_red,bg='red', fg='white', width=5, height=2)
btnR.place(x=340+20, y=0)

btnDR = tkinter.Button(window, command=pen_dark_red,bg='dark red',fg='white',width=5,height=2)
btnDR.place(x=290+15,y=0)

btnGr = tkinter.Button(window,command=pen_gray,bg='gray',fg='white',width=5,height=2)
btnGr.place(x=240+10,y=0)

btnB = tkinter.Button(window,command=pen_black,bg='black', fg='white', width=5, height=2)
btnB.place(x=190+5, y=0)

color_button = tkinter.Button(window, text="‚ûïüì¶üíß", command=choose_fill_color,bg='white', fg='black', width=7, height=1)
color_button.place(x=44, y=33)

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ª–∏–≤–∫–∏
fill_button = tkinter.Button(window, text="üì¶üíß", command=fill_screen,bg='white', fg='black', width=4, height=1)
fill_button.place(x=68,y=0)

btnWashing_gum = tkinter.Button(window, text='‚úèÔ∏è',command=pen_washing, bg='white', fg='black', width=2, height=1)
btnWashing_gum.place(x=45,y=0)

btnUp = tkinter.Button(window, text='‚¨ÜÔ∏è',command=draw_up,bg='white',fg='black',width=2,height=1)
btnUp.place(x=110,y=0)

btnDown = tkinter.Button(window,text='‚¨áÔ∏è',command=draw_down,bg='white',fg='black',width=2,height=1)
btnDown.place(x=110,y=35)

# Turtle Screen and RawTurtle (—Å–æ–∑–¥–∞–µ–º —Å—Ä–∞–∑—É)
screen = TurtleScreen(canvas)
draw = RawTurtle(screen)

#draw.hideturtle()  # –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–ø–∞—à–∫—É

# Scale –¥–ª—è —Ç–æ–ª—â–∏–Ω—ã –ø–µ—Ä–∞
pen_size_scale = tkinter.Scale(window, from_=1, to=100, orient=tkinter.VERTICAL, command=change_pen_size)
pen_size_scale.set(pen_size)
pen_size_scale.place(x=0, y=200)

menu = Menu(window)
save_like = Menu(menu)
save_like.add_command(label='üíæ  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫       ', command=save_screen)
menu.add_cascade(label='–§–∞–π–ª', menu=save_like)
window.config(menu=menu)

draw.width(1)
def drag(i, j):
    draw.ondrag(None)
    draw.setheading(draw.towards(i, j))
    draw.goto(i, j)
    draw.ondrag(drag)
draw.speed('fastest')
draw.shape("turtle")
draw.ondrag(drag)

### ### -- –∫–æ–Ω–µ—Ü –¥–æ–±–∞–≤–∫–∏ -- ### ###
draw.penup()
draw.goto(400,-50)
draw.pendown()

window.mainloop()